/* TYPE TO COMPILE : sass --watch src/css/main.scss:src/css/main.css */

/* VARIABLES */

$greenButton: #39c339;
$greenButtonDarker: darken($greenButton, 10%);
$redButton: #e35c5c;
$redButtonDarker: darken($redButton, 10%);
$blueButton: #7070f4;
$blueButtonDarker: darken($blueButton, 10%);
$yellowButton: #f0f05e;
$yellowButtonDarker: darken($yellowButton, 10%);
$counterPink: #d45252;
/* FONTS */

@font-face {
    font-family: calculatorFont;
    src: url(../../fonts/calculatorFont/digital-7.ttf);
    font-display: swap;
}

html {
    height: 100%;
}

body {
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #e8ddc5;
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='128' height='128' viewBox='0 0 88 88'%3E%3Cg fill='%23ae9a5d' fill-opacity='0.61'%3E%3Cpath fill-rule='evenodd' d='M29.42 29.41c.36-.36.58-.85.58-1.4V0h-4v26H0v4h28c.55 0 1.05-.22 1.41-.58h.01zm0 29.18c.36.36.58.86.58 1.4V88h-4V62H0v-4h28c.56 0 1.05.22 1.41.58zm29.16 0c-.36.36-.58.85-.58 1.4V88h4V62h26v-4H60c-.55 0-1.05.22-1.41.58h-.01zM62 26V0h-4v28c0 .55.22 1.05.58 1.41.37.37.86.59 1.41.59H88v-4H62zM18 36c0-1.1.9-2 2-2h10a2 2 0 1 1 0 4H20a2 2 0 0 1-2-2zm0 16c0-1.1.9-2 2-2h10a2 2 0 1 1 0 4H20a2 2 0 0 1-2-2zm16-26a2 2 0 0 1 2-2 2 2 0 0 1 2 2v4a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-4zm16 0a2 2 0 0 1 2-2 2 2 0 0 1 2 2v4a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-4zM34 58a2 2 0 0 1 2-2 2 2 0 0 1 2 2v4a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-4zm16 0a2 2 0 0 1 2-2 2 2 0 0 1 2 2v4a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-4zM34 78a2 2 0 0 1 2-2 2 2 0 0 1 2 2v6a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-6zm16 0a2 2 0 0 1 2-2 2 2 0 0 1 2 2v6a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-6zM34 4a2 2 0 0 1 2-2 2 2 0 0 1 2 2v6a2 2 0 0 1-2 2 2 2 0 0 1-2-2V4zm16 0a2 2 0 0 1 2-2 2 2 0 0 1 2 2v6a2 2 0 0 1-2 2 2 2 0 0 1-2-2V4zm-8 82a2 2 0 1 1 4 0v2h-4v-2zm0-68a2 2 0 1 1 4 0v10a2 2 0 1 1-4 0V18zM66 4a2 2 0 1 1 4 0v8a2 2 0 1 1-4 0V4zm0 72a2 2 0 1 1 4 0v8a2 2 0 1 1-4 0v-8zm-48 0a2 2 0 1 1 4 0v8a2 2 0 1 1-4 0v-8zm0-72a2 2 0 1 1 4 0v8a2 2 0 1 1-4 0V4zm24-4h4v2a2 2 0 1 1-4 0V0zm0 60a2 2 0 1 1 4 0v10a2 2 0 1 1-4 0V60zm14-24c0-1.1.9-2 2-2h10a2 2 0 1 1 0 4H58a2 2 0 0 1-2-2zm0 16c0-1.1.9-2 2-2h10a2 2 0 1 1 0 4H58a2 2 0 0 1-2-2zm-28-6a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm8 26a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm16 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4zM36 20a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm16 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm-8-8a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm0 68a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm16-34a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm16-12a2 2 0 1 0 0 4 6 6 0 1 1 0 12 2 2 0 1 0 0 4 10 10 0 1 0 0-20zm-64 0a2 2 0 1 1 0 4 6 6 0 1 0 0 12 2 2 0 1 1 0 4 10 10 0 1 1 0-20zm56-12a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm0 48a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm-48 0a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm0-48a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm24 32a10 10 0 1 1 0-20 10 10 0 0 1 0 20zm0-4a6 6 0 1 0 0-12 6 6 0 0 0 0 12zm36-36a6 6 0 1 1 0-12 6 6 0 0 1 0 12zm0-4a2 2 0 1 0 0-4 2 2 0 0 0 0 4zM10 44c0-1.1.9-2 2-2h8a2 2 0 1 1 0 4h-8a2 2 0 0 1-2-2zm56 0c0-1.1.9-2 2-2h8a2 2 0 1 1 0 4h-8a2 2 0 0 1-2-2zm8 24c0-1.1.9-2 2-2h8a2 2 0 1 1 0 4h-8a2 2 0 0 1-2-2zM3 68c0-1.1.9-2 2-2h8a2 2 0 1 1 0 4H5a2 2 0 0 1-2-2zm0-48c0-1.1.9-2 2-2h8a2 2 0 1 1 0 4H5a2 2 0 0 1-2-2zm71 0c0-1.1.9-2 2-2h8a2 2 0 1 1 0 4h-8a2 2 0 0 1-2-2zm6 66a6 6 0 1 1 0-12 6 6 0 0 1 0 12zm0-4a2 2 0 1 0 0-4 2 2 0 0 0 0 4zM8 86a6 6 0 1 1 0-12 6 6 0 0 1 0 12zm0-4a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm0-68A6 6 0 1 1 8 2a6 6 0 0 1 0 12zm0-4a2 2 0 1 0 0-4 2 2 0 0 0 0 4zm36 36a2 2 0 1 0 0-4 2 2 0 0 0 0 4z'/%3E%3C/g%3E%3C/svg%3E");
}

.container {
    position: relative;
    text-align: center;
    user-select: none;
    overflow-x: auto;
}

/* COLOR SHAPES */

svg [id*="Button"] {
    cursor: pointer;
    &.disabled {
        pointer-events: none;
    }
}

@mixin buttonsMixin($fillColor,
$fillHoverColor,
$strokeActiveColor) {
    fill: $fillColor;
    &:hover {
        fill: $fillHoverColor;
    }
    &:active {
        stroke-width: 3;
        stroke: $strokeActiveColor;
    }
    &.highlighted {
        fill: $fillHoverColor;
    }
}

#greenButton {
    @include buttonsMixin($greenButton,
    $greenButtonDarker,
    green)
}

#redButton {
    @include buttonsMixin($redButton,
    $redButtonDarker,
    red)
}

#blueButton {
    @include buttonsMixin($blueButton,
    $blueButtonDarker,
    blue)
}

#yellowButton {
    @include buttonsMixin($yellowButton,
    $yellowButtonDarker,
    yellow)
}

/* BUTTON BOARD */ // This is nested too much, I should separate things later on
#buttonBoard {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -40%);
    h1 {
        font-family: 'Montserrat', sans-serif;
        font-size: 3rem;
        color: gray;
        margin: 0;
        padding-bottom: 1rem;
    }
    .button-section {
        display: flex;
        align-items: center;
    }
    .button-section>div {
        margin: 0.5rem;
        label {
            display: block;
        }
        .button-rounded {
            border-radius: 50%;
            height: 20px;
            width: 20px;
            border-style: outset;
            outline: none;
            &:active {
                border-style: inset;
            }
        }
        #startButton {
            background: green;
            border-color: green;
        }
        #strictButton {
            background: red;
            border-color: red;
        }
        /* TOGGLE SWITCH */
        .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 25px;
        }
        /* Hide default HTML checkbox */
        .switch input {
            display: none;
        }
        /* The slider */
        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
        }
        .slider:before {
            position: absolute;
            content: "";
            height: 20px;
            width: 20px;
            left: 0;
            bottom: 0;
            border: solid 2.5px #3C3C3C;
            background-color: white;
        }
        input:checked+.slider:before {
            transform: translateX(25px);
        }
        .slider:after {
            position: absolute;
            content: "";
            height: 12px;
            width: 12px;
            border-radius: 50%;
            left: 0;
            top: 50%;
            transform: translate(-150%, -50%);
            background: radial-gradient(#5b5656, #ebe7e7);
            pointer-events: none;
        }
        input:checked+.slider:after {
            background: radial-gradient(#d45e0f, orange);
        }
    }
    /* COUNTER */ // Counter should indicate if the game is ON or OFF
    .counter-section {
        display: flex;
        align-items: center;
        justify-content: center;
        padding-top: 0.25rem;
    }
    .counter-section>span {
        font-family: calculatorFont;
        display: inline-block;
        font-size: 1.5rem;
        background: #3e2323;
        color: $counterPink;
        margin-left: 0.25rem;
        border: solid 1px black;
        min-width: 75px;
        max-width: 75px;
        min-height: 25px;
        &>small {
            font-size: 1rem;
            float: left;
            visibility: hidden;
        }
    }
}

/* SMALL SCREENS HACK */

@media (max-width: 650px) {
    #buttonBoard {
        left: 325px;
    }
}